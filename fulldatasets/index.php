<?php include('simple_html_dom.php');require '/kint/Kint.class.php';include('httpful.phar');class Circonscription {    public $circ_id = '';    public $circ_name = ''; } class Delegation {  public $circonscription= null;  public $deleg_id='';  public $deleg_name='';}class Pcenter {  public $delegation=null;  public $pcenter_id='';  public $pcenter_name='';}class PartyResult {  public $number='';  public $name='';  public $votes='';  public $percentage='';}class EntityResult { public $circonscription=''; public $delegation=''; public $pcenter=''; public $eligible_voters=''; public $voter_turnout=''; public $delivred_ballots=''; public $blank_ballots=''; public $unused_ballots=''; public $cancelled_ballots=''; public $damaged_ballots=''; public $correct_ballots=''; public $partyresults=null;}// Step 1 :  getting the list of all circonscriptions with their id   function get_circonscriptions(){ $c=array();  $html = file_get_html('http://www.isie.tn/Ar/rsfinal.php');	foreach($html->find('#circonscription') as $e)     {	   $circonscriptions = $e->children;	   foreach ( $circonscriptions as $circonscription)	      {		      $circ_id= $circonscription->attr['value'];		      $circ_name= trim($circonscription->innertext);			   if($circ_id)		        {				 $temp_circ= new Circonscription();				 $temp_circ->circ_id=$circ_id;				 $temp_circ->circ_name=$circ_name;				$c[]= $temp_circ;				}		  }				}    return $c;} function get_delegations($circ_object){ $d= array(); //foreach($c as $circ_object) //{	//web service url     $ws_url="http://www.isie.tn/Ar/ws_delegation_ajax.php?circonscription=".$circ_object->circ_id;	 $response =  \Httpful\Request::post($ws_url)    ->send();     $delegationhtml= $response->body;	 $delegations=str_get_html($delegationhtml);     foreach ($delegations->find('option') as $e)     {  	     $deleg_id= $e->attr['value'];		 $deleg_name=trim($e->innertext);		  if ($deleg_id)		  {		    $temp_deleg=new Delegation();			$temp_deleg->circonscription=$circ_object;			$temp_deleg->deleg_id=$deleg_id;			$temp_deleg->deleg_name=$deleg_name;			$d[]=$temp_deleg;		  }	 } //} return $d ;}//echo json_encode($pcenter_holder,JSON_UNESCAPED_UNICODE);function get_pcenters($deleg_object){    $p=array(); 	//foreach($d as $deleg_object)	//{	//web service url     $ws_url="http://www.isie.tn/Ar/ws_centre_vote_ajax.php?circonscription=".$deleg_object->circonscription->circ_id."&delegation=".$deleg_object->deleg_id;	//d($ws_url);	 $response =  \Httpful\Request::post($ws_url)    ->send();     $pcenterhtml= $response->body;	 $pcenters=str_get_html($pcenterhtml);     foreach ($pcenters->find('option') as $e)     {  	     $pcenter_id= $e->attr['value'];		 $pcenter_name= trim($e->innertext);		 		if($pcenter_id)		{			$temp_pcenter=new Pcenter();			$temp_pcenter->delegation=$deleg_object;			$temp_pcenter->pcenter_id=$pcenter_id;			$temp_pcenter->pcenter_name=$pcenter_name;			$p[]=$temp_pcenter;		 		}	 }	//}   return $p;}function scrape($circ_id,$deleg_id='',$pcenter_id=''){    $result=new EntityResult();   $result->circonscription =$circ_id;   $result->delegation=$deleg_id;   $result->pcenter_id=$pcenter_id;     $post_vars=array('circonscription'=>$circ_id,                   'delegation'=>$deleg_id,				   'centre_vote'=>$pcenter_id);                       $res_url="http://www.isie.tn/Ar/rsfinal.php";	$ch = curl_init();	curl_setopt($ch, CURLOPT_HEADER, true);	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);	curl_setopt($ch, CURLOPT_URL, $res_url);	curl_setopt($ch, CURLOPT_POST, true);	curl_setopt($ch, CURLOPT_POSTFIELDS,$post_vars); 	$response = curl_exec($ch);	$html=str_get_html($response);	 $result_tables= $html->find('table .tables');	 // result_tables[0] ==> search form ; notneeded	 //result_tables[1] ==> turnout eligible	 //result_tables[2] ==> ballot statistics	 //result_tables[3] ==> list results 	 	 $labels=$result_tables[1]->find('strong');	 //eligible voters number	 $eligible =$labels[1]->innertext;	 //turnout 	$turnout =$labels[3]->innertext;		$result->eligible_voters=$eligible;	$result->voter_turnout=$turnout;    $stats=$result_tables[2]->find('strong');    $delivred_ballots=$stats[3]->innertext;	$blank_ballots=$stats[5]->innertext;	$unused_ballots=$stats[7]->innertext;	$cancelled_ballots=$stats[9]->innertext;	$damaged_ballots=$stats[11]->innertext;	$correct_ballots=$stats[13]->innertext;    $result->delivred_ballots=$delivred_ballots;    $result->blank_ballots=$blank_ballots;    $result->unused_ballots=$unused_ballots;    $result->cancelled_ballots=$cancelled_ballots;    $result->damaged_ballots=$damaged_ballots;    $result->correct_ballots=$correct_ballots;    	//results part   $partyResults=array();	$resultparts=$result_tables[3]->find('strong');	$max=sizeof($resultparts);	 $i=0;	while ($i<$max)	{	 	 $percentage=$resultparts[$i]->innertext;	 $votes=$resultparts[$i+1]->innertext;	 $name=$resultparts[$i+2]->innertext;	 $number=$resultparts[$i+3]->innertext;	 if($number)	  {		$temp_partyResult=new PartyResult();				$temp_partyResult->number=$number;				$temp_partyResult->name=$name;				$temp_partyResult->votes=$votes;				$temp_partyResult->percentage=$percentage;				$partyResults[]=$temp_partyResult;	  	  	  }	$i=$i+4;	} 	    $result->partyresults=$partyResults;	return $result;}//$test='111';//d(scrape($test)); function resultsToJson() {     $directory='./results/';	$circonscriptions=get_circonscriptions();	mkdir($directory);	//write circonscription list to json file 		$fp = fopen($directory.'circonscriptions.json', 'w');	fwrite($fp, json_encode($circonscriptions,JSON_UNESCAPED_UNICODE));	fclose($fp);	//main loop for  getting circonscription data and loop through delegations and polling centers    foreach ($circonscriptions as $circonscription)		{	   $directory='./results/';	   //write circonscription result to json 	   $result = scrape($circonscription->circ_id);	   $directoryLvel1=$directory.'/'.$circonscription->circ_id.'/';	   $fp = fopen($directory.$circonscription->circ_id.'.json', 'w');	   fwrite($fp, json_encode($result,JSON_UNESCAPED_UNICODE));	   fclose($fp); 	   //create directory for circonscription to hold the sublevels data 	   mkdir($directoryLvel1);	   $delegations =get_delegations($circonscription);	   $fp = fopen($directoryLvel1.'delegations.json', 'w');	   fwrite($fp, json_encode($delegations,JSON_UNESCAPED_UNICODE));	   fclose($fp);       // loop through delegations        foreach ($delegations as $delegation)       { 		   $delegresult = scrape($circonscription->circ_id,$delegation->deleg_id);		   $directoryLvel2=$directoryLvel1.'/'.$delegation->deleg_id.'/';		   $fp = fopen($directoryLvel1.$delegation->deleg_id.'.json', 'w');		   fwrite($fp, json_encode($delegresult,JSON_UNESCAPED_UNICODE));		   fclose($fp); 		   //create directory for circonscription to hold the sublevels data 		   mkdir($directoryLvel2);		   $pcenters =get_pcenters($delegation);		   $fp = fopen($directoryLvel2.'pollingCenters.json', 'w');		   fwrite($fp, json_encode($pcenters,JSON_UNESCAPED_UNICODE));		   fclose($fp);		   foreach ($pcenters as $pcenter)		   {  $pcenterresult=scrape($circonscription->circ_id,$delegation->deleg_id,$pcenter->pcenter_id);		       $directoryLvel3=$directoryLvel2.'/'.$pcenter->pcenter_id.'/';			   $fp = fopen($directoryLvel2.$pcenter->pcenter_id.'.json', 'w');			   fwrite($fp, json_encode($pcenterresult,JSON_UNESCAPED_UNICODE));			   fclose($fp); 			   		   }	   	   	   	   	   }	  		}   }resultsToJson();?>